{"version":3,"sources":["useReduxDevToolsExtension.tsx"],"names":["useReduxDevToolsExtension","ref","devToolsRef","React","useRef","current","undefined","__REDUX_DEVTOOLS_EXTENSION__","connect","name","resetRoot","result","devTools","type","init","state","send","action","useEffect","subscribe","message","JSON","parse"],"mappings":";;;;;;;AACA;;AAEA;;;;;;;;AAiBe,SAASA,yBAAT,CACbC,GADa,EAEb;AACA,QAAMC,WAAW,GAAGC,KAAK,CAACC,MAAN,EAApB;;AAEA,MACEF,WAAW,CAACG,OAAZ,KAAwBC,SAAxB,IACA,OAAOC,4BAAP,KAAwC,WAF1C,EAGE;AACAL,IAAAA,WAAW,CAACG,OAAZ,GAAsBE,4BAA4B,CAACC,OAA7B,CAAqC;AACzDC,MAAAA,IAAI,EAAE;AADmD,KAArC,CAAtB;AAGD;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAgB,8BAAgBT,GAAhB,EAAsBU,MAAD,IAAY;AACrD,UAAMC,QAAQ,GAAGV,WAAW,CAACG,OAA7B;;AAEA,QAAI,CAACO,QAAL,EAAe;AACb;AACD;;AAED,YAAQD,MAAM,CAACE,IAAf;AACE,WAAK,MAAL;AACED,QAAAA,QAAQ,CAACE,IAAT,CAAcH,MAAM,CAACI,KAArB;AACA;;AACF,WAAK,QAAL;AACEH,QAAAA,QAAQ,CAACI,IAAT,CAAcL,MAAM,CAACM,MAArB,EAA6BN,MAAM,CAACI,KAApC;AACA;AANJ;AAQD,GAfqB,CAAtB;AAiBAZ,EAAAA,KAAK,CAACe,SAAN,CACE;AAAA;;AAAA,mCACEhB,WAAW,CAACG,OADd,yDACE,qBAAqBc,SAArB,CAAgCC,OAAD,IAAa;AAC1C,UAAIA,OAAO,CAACP,IAAR,KAAiB,UAAjB,IAA+BO,OAAO,CAACL,KAA3C,EAAkD;AAChD,cAAMA,KAAK,GAAGM,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACL,KAAnB,CAAd;AAEAL,QAAAA,SAAS,CAACK,KAAD,CAAT;AACD;AACF,KAND,CADF;AAAA,GADF,EASE,CAACL,SAAD,CATF;AAWD","sourcesContent":["import type { NavigationContainerRef } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport useDevToolsBase from './useDevToolsBase';\n\ntype DevToolsConnection = {\n  init(value: any): void;\n  send(action: any, value: any): void;\n  subscribe(\n    listener: (message: { type: string; [key: string]: any }) => void\n  ): () => void;\n};\n\ntype DevToolsExtension = {\n  connect(options: { name: string }): DevToolsConnection;\n  disconnect(): void;\n};\n\ndeclare const __REDUX_DEVTOOLS_EXTENSION__: DevToolsExtension | undefined;\n\nexport default function useReduxDevToolsExtension(\n  ref: React.RefObject<NavigationContainerRef<any>>\n) {\n  const devToolsRef = React.useRef<DevToolsConnection>();\n\n  if (\n    devToolsRef.current === undefined &&\n    typeof __REDUX_DEVTOOLS_EXTENSION__ !== 'undefined'\n  ) {\n    devToolsRef.current = __REDUX_DEVTOOLS_EXTENSION__.connect({\n      name: '@react-navigation/devtools',\n    });\n  }\n\n  const { resetRoot } = useDevToolsBase(ref, (result) => {\n    const devTools = devToolsRef.current;\n\n    if (!devTools) {\n      return;\n    }\n\n    switch (result.type) {\n      case 'init':\n        devTools.init(result.state);\n        break;\n      case 'action':\n        devTools.send(result.action, result.state);\n        break;\n    }\n  });\n\n  React.useEffect(\n    () =>\n      devToolsRef.current?.subscribe((message) => {\n        if (message.type === 'DISPATCH' && message.state) {\n          const state = JSON.parse(message.state);\n\n          resetRoot(state);\n        }\n      }),\n    [resetRoot]\n  );\n}\n"]}